'''
作者:lg
日期:2019/9/1
文件描述:列表和元组基本属性和操作
缺陷：
'''

# 列表拥有索引
lst = ["麻花藤", "王剑林", "⻢芸", "周鸿医", "向华强"]
print(lst[0])  # 获取第⼀个元素

# 列表里的元素可以被更改，不同于字符串和元组
lst[3] = "流动强"

# 列表的切片
lst = ["麻花藤", "王剑林", "⻢芸", "周鸿医", "向华强"]
print(lst[0:3])  # ['麻花藤', '王剑林', '⻢芸']

# 列表的增删改查
# 对列表列表的修改是在原列表上，不会生成新列表，不同于字符串的操作

# 增加
lst = ["麻花藤", "林俊杰", "周润发", "周芷若"]
lst.append("wusir")

lst = ["麻花藤", "张德忠", "孔德福"]
lst.insert(1, "刘德华")  # 在1的位置插⼊刘德华. 原来的元素向整体向后移动⼀位

# 迭代添加,相当于拼接列表
lst = ["王志⽂", "张⼀⼭", "苦海⽆涯"]
lst.extend(["麻花藤", "麻花不疼"])
print(lst)

# 删除
# pop, remove, clear, del

lst = ["麻花藤", "王剑林", "李嘉诚", "王富贵"]
ret_deleted = lst.pop()  # 删除最后⼀个
el = lst.pop(2)  # 删除2号元素,不指定参数则删除最后一个元素
print(el)
print(lst)

lst.remove("麻花藤")  # 删除指定元素，
# lst.remove("哈哈")  # 删除不存在的元素会报错

# remove与pop的区别：pop函数会返回被删除的元素，remove不会，因为remove指明了被删除的那个元素

lst.clear()  # 清空list
print(lst)

del lst[1:3]  # 切⽚删除
lst = ["麻花藤", "王剑林", "李嘉诚", "王富贵"]
del lst[0]

# 修改
lst = ["太⽩", "太⿊", "五⾊", "银王", "⽇天"]
# lst[1] = "太污"  # 把1号元素修改成太污

# 把切片范围内的元素,迭代修改掉(和extend操作相似) ---先删除,再添加
lst[0:2] = 'ABCDE'
print(lst)  # 结果:['A', 'B', 'C', 'D', 'E', '五⾊', '银王', '⽇天']
lst[0:2] = ['ABCDE']
print(lst)  # 结果:['ABCDE', 'C', 'D', 'E', '五⾊', '银王', '⽇天']

# 如果步⻓不是1,要注意元素的个数和切片得出的元素个数要相等
lst[1:4:2] = ["麻花藤", "哇靠"]
print(lst)
# 如果切⽚没有步⻓或者步⻓是1. 则不⽤关⼼个数
lst[1:3] = ["麻花藤", "哇靠", '在哪', '是的']
print(lst)

# 查询
for el in lst:
    print(el)

# 常见方法
lst = ["太⽩", "太⿊", "五⾊", "银王", "⽇天", "太⽩"]
# 查询元素出现的次数
c = lst.count('太⽩')
print(c)

# 排序(升序), 直接对原列表操作
lst = [1, 11, 22, 2]
lst.sort()
print(lst)
# 翻转列表顺序
lst.sort(reverse=True)
print(lst)
lst.reverse()
print(lst)

# 列表的嵌套
lst = [1, "太⽩", "wusir", ["⻢⻁疼", ["可⼝可乐"], "王剑林"]]

# 将wusir拿到,然后首字母大写,再扔回去
# 因为不能对原字符串直接操作
s = lst[2]
s1 = s.capitalize()
lst[2] = s1

s1 = lst[1].replace('白', '黑')
lst[1] = s1

# 空元素元组, 单个元素元组写法
t1 = tuple()
t2 = ('a',)

# 元组常用方法
t = ("太⽩", "太⿊", "五⾊", "银王", "⽇天", "太⽩")

# 计数
c = t.count('太⽩')
print('c', c)

# 索引
i = t.index("太⿊")
print('i', i)

# 列表在循环的过程中不能删除,因为会改变索引  !!!!!
# 前一个元素被删除时,后面元素顶上来,索引会对应不上,整个状态索引是动态变化的

# 错误用法
# for循环中有索引index,每次删一个元素会加一,但是元素被删除后,和以前的索引就对应不上
l = ["太⽩", "太⿊", "五⾊", "银王", "⽇天", "太⽩"]
for i in l:
    l.remove(i)
print(l)

# 删除下面列表中小于100的元素
# 不是单个删,不是范围(连续)删,而是有条件的筛选删除 !!!!!
l_old = [12, 232, 98, 19, 10, 20, 90, 8, 103, 123, 10000, 9, 78]

# 错误用法,会破坏原列表的 '原始索引 '顺序,倒置有些元素遍历不到
# for el in l_old:
#     if el < 100:
#         l_old.remove(el)
# print(l_old)

# 正确用法
l_dl = []
for el in l_old:
    if el < 100:
        l_dl.append(el)
print(l_dl)  # 全部找到需要被删除的元素
for i in l_dl:  # 循环记录的内容
    l_old.remove(i)  # 删除原来的内容
print(l_old)

# 或者从后往前删除,不会破坏 本来索引 顺序
l_old = [12, 232, 98, 19, 10, 20, 90, 8, 103, 123, 10000, 9, 78]
for i in range(len(l_old)):  # 这里简单的用作循环次数
    l_old.pop()
print(l_old)

# 注意:用for作迭代是不可以的,for循环 '内部索引' 仍然被破坏
l_old = [12, 232, 98, 19, 10, 20, 90, 8, 103, 123, 10000, 9, 78]
for i in l_old:
    print(i)
    l_old.pop()
print('l_old', l_old)
